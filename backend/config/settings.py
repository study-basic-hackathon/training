"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pq(_9$%gf7w1)gv*ekpgg&g9i8#x95b8_+0-057p_v)fg66*rn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',      # ★追加: CORS ヘッダーミドルウェアを有効にするため
        #CORS (Cross-Origin Resource Sharing) の設定不足: フロントエンドの Vue.js アプリケーションが動作するドメイン（通常 http://localhost:8080 や http://127.0.0.1:8080）から、バックエンドの Django API (http://127.0.0.1:8080) にアクセスするためには、CORS の設定が必要です。これが不足していると、ブラウザのセキュリティ機能によって通信がブロックされます。
    'api.training',     # ★追加: あなたのDjangoアプリケーションを認識させるため
    'api.goals',        # ★追加: 目標管理のアプリケーション
    # 'api.exercises',   # ★追加: エクササイズ管理のアプリケーション
    # 'api', # これはもし 'api' という名前のアプリが別に存在するなら残しますが、
             # ほとんどの場合 'api.training' のみで十分です。
             # 状況に応じて残すか削除するか判断してください。
             # 一般的には、アプリは 'api.training' のようにフルパスで指定します。
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # ★追加: これを CommonMiddleware の前に置く
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # BASE_DIR (backend) から上の親ディレクトリ (プロジェクトルート) に戻り、
            # そこから 'frontend', 'dist' へと辿るのが正しいパスになります。
            os.path.join(BASE_DIR.parent, 'frontend', 'dist'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# Internationalization など既存のセクションの後に追加
# --- CORS Settings ---
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",    # React.js 開発サーバーのデフォルトポート
    "http://127.0.0.1:5173",
]

LANGUAGE_CODE = 'ja-jp'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# 追加: ViteでビルドされたReactアプリの出力ディレクトリを指定
# BASE_DIR は manage.py がある backend ディレクトリを指す
# プロジェクトルートにいるとして、frontend/dist を指すように設定
STATICFILES_DIRS = [
    os.path.join(BASE_DIR.parent, 'frontend', 'dist'),
    # 例: /path/to/your/project/frontend/dist を指す
]

# プロダクション環境で静的ファイルを収集する場所
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# 解説:
# STATIC_ROOT は、python manage.py collectstatic コマンドを実行した際に、全ての静的ファイル（Djangoアプリの静的ファイル、adminの静的ファイル、そしてReactのビルド済みファイル）がここに集められる場所です。

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        # 必要に応じて他の認証クラスを追加
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}